{"version":3,"file":"extend-shallow-7b2b1bde.js","sources":["../../node_modules/extend-shallow/node_modules/is-extendable/index.js","../../node_modules/extend-shallow/index.js"],"sourcesContent":["/*!\n * is-extendable <https://github.com/jonschlinkert/is-extendable>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isExtendable(val) {\n  return typeof val !== 'undefined' && val !== null\n    && (typeof val === 'object' || typeof val === 'function');\n};\n","'use strict';\n\nvar isObject = require('is-extendable');\n\nmodule.exports = function extend(o/*, objects*/) {\n  if (!isObject(o)) { o = {}; }\n\n  var len = arguments.length;\n  for (var i = 1; i < len; i++) {\n    var obj = arguments[i];\n\n    if (isObject(obj)) {\n      assign(o, obj);\n    }\n  }\n  return o;\n};\n\nfunction assign(a, b) {\n  for (var key in b) {\n    if (hasOwn(b, key)) {\n      a[key] = b[key];\n    }\n  }\n}\n\n/**\n * Returns true if the given `key` is an own property of `obj`.\n */\n\nfunction hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n"],"names":["isExtendable","val","isObject","require$$0","extendShallow","o","len","i","obj","assign","a","b","key","hasOwn"],"mappings":";;;;;GASA,IAAAA,EAAiB,SAAsBC,EAAK,CAC1C,OAAO,OAAOA,EAAQ,KAAeA,IAAQ,OACvC,OAAOA,GAAQ,UAAY,OAAOA,GAAQ,WAClD,ECVIC,EAAWC,EAEfC,EAAiB,SAAgBC,EAAgB,CAC1CH,EAASG,CAAC,IAAKA,EAAI,CAAE,GAG1B,QADIC,EAAM,UAAU,OACXC,EAAI,EAAGA,EAAID,EAAKC,IAAK,CAC5B,IAAIC,EAAM,UAAUD,CAAC,EAEjBL,EAASM,CAAG,GACdC,EAAOJ,EAAGG,CAAG,CAEhB,CACD,OAAOH,CACT,EAEA,SAASI,EAAOC,EAAGC,EAAG,CACpB,QAASC,KAAOD,EACVE,EAAOF,EAAGC,CAAG,IACfF,EAAEE,CAAG,EAAID,EAAEC,CAAG,EAGpB,CAMA,SAASC,EAAOL,EAAKI,EAAK,CACxB,OAAO,OAAO,UAAU,eAAe,KAAKJ,EAAKI,CAAG,CACtD","x_google_ignoreList":[0,1]}