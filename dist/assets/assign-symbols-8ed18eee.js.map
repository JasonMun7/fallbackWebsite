{"version":3,"file":"assign-symbols-8ed18eee.js","sources":["../../node_modules/assign-symbols/index.js"],"sourcesContent":["/*!\n * assign-symbols <https://github.com/jonschlinkert/assign-symbols>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function(receiver, objects) {\n  if (receiver === null || typeof receiver === 'undefined') {\n    throw new TypeError('expected first argument to be an object.');\n  }\n\n  if (typeof objects === 'undefined' || typeof Symbol === 'undefined') {\n    return receiver;\n  }\n\n  if (typeof Object.getOwnPropertySymbols !== 'function') {\n    return receiver;\n  }\n\n  var isEnumerable = Object.prototype.propertyIsEnumerable;\n  var target = Object(receiver);\n  var len = arguments.length, i = 0;\n\n  while (++i < len) {\n    var provider = Object(arguments[i]);\n    var names = Object.getOwnPropertySymbols(provider);\n\n    for (var j = 0; j < names.length; j++) {\n      var key = names[j];\n\n      if (isEnumerable.call(provider, key)) {\n        target[key] = provider[key];\n      }\n    }\n  }\n  return target;\n};\n"],"names":["assignSymbols","receiver","objects","isEnumerable","target","len","i","provider","names","j","key"],"mappings":";;;;;GASA,IAAAA,EAAiB,SAASC,EAAUC,EAAS,CAC3C,GAAID,IAAa,MAAQ,OAAOA,EAAa,IAC3C,MAAM,IAAI,UAAU,0CAA0C,EAOhE,GAJI,OAAOC,EAAY,KAAe,OAAO,OAAW,KAIpD,OAAO,OAAO,uBAA0B,WAC1C,OAAOD,EAOT,QAJIE,EAAe,OAAO,UAAU,qBAChCC,EAAS,OAAOH,CAAQ,EACxBI,EAAM,UAAU,OAAQC,EAAI,EAEzB,EAAEA,EAAID,GAIX,QAHIE,EAAW,OAAO,UAAUD,CAAC,CAAC,EAC9BE,EAAQ,OAAO,sBAAsBD,CAAQ,EAExCE,EAAI,EAAGA,EAAID,EAAM,OAAQC,IAAK,CACrC,IAAIC,EAAMF,EAAMC,CAAC,EAEbN,EAAa,KAAKI,EAAUG,CAAG,IACjCN,EAAOM,CAAG,EAAIH,EAASG,CAAG,EAE7B,CAEH,OAAON,CACT","x_google_ignoreList":[0]}