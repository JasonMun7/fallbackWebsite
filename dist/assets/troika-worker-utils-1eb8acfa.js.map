{"version":3,"file":"troika-worker-utils-1eb8acfa.js","sources":["../../node_modules/troika-worker-utils/dist/troika-worker-utils.esm.js"],"sourcesContent":["/**\n * Main content for the worker that handles the loading and execution of\n * modules within it.\n */\nfunction workerBootstrap() {\n  var modules = Object.create(null);\n\n  // Handle messages for registering a module\n  function registerModule(ref, callback) {\n    var id = ref.id;\n    var name = ref.name;\n    var dependencies = ref.dependencies; if ( dependencies === void 0 ) dependencies = [];\n    var init = ref.init; if ( init === void 0 ) init = function(){};\n    var getTransferables = ref.getTransferables; if ( getTransferables === void 0 ) getTransferables = null;\n\n    // Only register once\n    if (modules[id]) { return }\n\n    try {\n      // If any dependencies are modules, ensure they're registered and grab their value\n      dependencies = dependencies.map(function (dep) {\n        if (dep && dep.isWorkerModule) {\n          registerModule(dep, function (depResult) {\n            if (depResult instanceof Error) { throw depResult }\n          });\n          dep = modules[dep.id].value;\n        }\n        return dep\n      });\n\n      // Rehydrate functions\n      init = rehydrate((\"<\" + name + \">.init\"), init);\n      if (getTransferables) {\n        getTransferables = rehydrate((\"<\" + name + \">.getTransferables\"), getTransferables);\n      }\n\n      // Initialize the module and store its value\n      var value = null;\n      if (typeof init === 'function') {\n        value = init.apply(void 0, dependencies);\n      } else {\n        console.error('worker module init function failed to rehydrate');\n      }\n      modules[id] = {\n        id: id,\n        value: value,\n        getTransferables: getTransferables\n      };\n      callback(value);\n    } catch(err) {\n      if (!(err && err.noLog)) {\n        console.error(err);\n      }\n      callback(err);\n    }\n  }\n\n  // Handle messages for calling a registered module's result function\n  function callModule(ref, callback) {\n    var ref$1;\n\n    var id = ref.id;\n    var args = ref.args;\n    if (!modules[id] || typeof modules[id].value !== 'function') {\n      callback(new Error((\"Worker module \" + id + \": not found or its 'init' did not return a function\")));\n    }\n    try {\n      var result = (ref$1 = modules[id]).value.apply(ref$1, args);\n      if (result && typeof result.then === 'function') {\n        result.then(handleResult, function (rej) { return callback(rej instanceof Error ? rej : new Error('' + rej)); });\n      } else {\n        handleResult(result);\n      }\n    } catch(err) {\n      callback(err);\n    }\n    function handleResult(result) {\n      try {\n        var tx = modules[id].getTransferables && modules[id].getTransferables(result);\n        if (!tx || !Array.isArray(tx) || !tx.length) {\n          tx = undefined; //postMessage is very picky about not passing null or empty transferables\n        }\n        callback(result, tx);\n      } catch(err) {\n        console.error(err);\n        callback(err);\n      }\n    }\n  }\n\n  function rehydrate(name, str) {\n    var result = void 0;\n    self.troikaDefine = function (r) { return result = r; };\n    var url = URL.createObjectURL(\n      new Blob(\n        [(\"/** \" + (name.replace(/\\*/g, '')) + \" **/\\n\\ntroikaDefine(\\n\" + str + \"\\n)\")],\n        {type: 'application/javascript'}\n      )\n    );\n    try {\n      importScripts(url);\n    } catch(err) {\n      console.error(err);\n    }\n    URL.revokeObjectURL(url);\n    delete self.troikaDefine;\n    return result\n  }\n\n  // Handler for all messages within the worker\n  self.addEventListener('message', function (e) {\n    var ref = e.data;\n    var messageId = ref.messageId;\n    var action = ref.action;\n    var data = ref.data;\n    try {\n      // Module registration\n      if (action === 'registerModule') {\n        registerModule(data, function (result) {\n          if (result instanceof Error) {\n            postMessage({\n              messageId: messageId,\n              success: false,\n              error: result.message\n            });\n          } else {\n            postMessage({\n              messageId: messageId,\n              success: true,\n              result: {isCallable: typeof result === 'function'}\n            });\n          }\n        });\n      }\n      // Invocation\n      if (action === 'callModule') {\n        callModule(data, function (result, transferables) {\n          if (result instanceof Error) {\n            postMessage({\n              messageId: messageId,\n              success: false,\n              error: result.message\n            });\n          } else {\n            postMessage({\n              messageId: messageId,\n              success: true,\n              result: result\n            }, transferables || undefined);\n          }\n        });\n      }\n    } catch(err) {\n      postMessage({\n        messageId: messageId,\n        success: false,\n        error: err.stack\n      });\n    }\n  });\n}\n\n/**\n * Fallback for `defineWorkerModule` that behaves identically but runs in the main\n * thread, for when the execution environment doesn't support web workers or they\n * are disallowed due to e.g. CSP security restrictions.\n */\nfunction defineMainThreadModule(options) {\n  var moduleFunc = function() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    return moduleFunc._getInitResult().then(function (initResult) {\n      if (typeof initResult === 'function') {\n        return initResult.apply(void 0, args)\n      } else {\n        throw new Error('Worker module function was called but `init` did not return a callable function')\n      }\n    })\n  };\n  moduleFunc._getInitResult = function() {\n    // We can ignore getTransferables in main thread. TODO workerId?\n    var dependencies = options.dependencies;\n    var init = options.init;\n\n    // Resolve dependencies\n    dependencies = Array.isArray(dependencies) ? dependencies.map(function (dep) { return dep && dep._getInitResult ? dep._getInitResult() : dep; }\n    ) : [];\n\n    // Invoke init with the resolved dependencies\n    var initPromise = Promise.all(dependencies).then(function (deps) {\n      return init.apply(null, deps)\n    });\n\n    // Cache the resolved promise for subsequent calls\n    moduleFunc._getInitResult = function () { return initPromise; };\n\n    return initPromise\n  };\n  return moduleFunc\n}\n\nvar supportsWorkers = function () {\n  var supported = false;\n\n  // Only attempt worker initialization in browsers; elsewhere it would just be\n  // noise e.g. loading into a Node environment for SSR.\n  if (typeof window !== 'undefined' && typeof window.document !== 'undefined') {\n    try {\n      // TODO additional checks for things like importScripts within the worker?\n      //  Would need to be an async check.\n      var worker = new Worker(\n        URL.createObjectURL(new Blob([''], { type: 'application/javascript' }))\n      );\n      worker.terminate();\n      supported = true;\n    } catch (err) {\n      if (typeof process !== 'undefined' && process.env.NODE_ENV === 'test') ; else {\n        console.log(\n          (\"Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: [\" + (err.message) + \"]\")\n        );\n      }\n    }\n  }\n\n  // Cached result\n  supportsWorkers = function () { return supported; };\n  return supported\n};\n\nvar _workerModuleId = 0;\nvar _messageId = 0;\nvar _allowInitAsString = false;\nvar workers = Object.create(null);\nvar registeredModules = Object.create(null); //workerId -> Set<unregisterFn>\nvar openRequests = Object.create(null);\n\n\n/**\n * Define a module of code that will be executed with a web worker. This provides a simple\n * interface for moving chunks of logic off the main thread, and managing their dependencies\n * among one another.\n *\n * @param {object} options\n * @param {function} options.init\n * @param {array} [options.dependencies]\n * @param {function} [options.getTransferables]\n * @param {string} [options.name]\n * @param {string} [options.workerId]\n * @return {function(...[*]): {then}}\n */\nfunction defineWorkerModule(options) {\n  if ((!options || typeof options.init !== 'function') && !_allowInitAsString) {\n    throw new Error('requires `options.init` function')\n  }\n  var dependencies = options.dependencies;\n  var init = options.init;\n  var getTransferables = options.getTransferables;\n  var workerId = options.workerId;\n\n  if (!supportsWorkers()) {\n    return defineMainThreadModule(options)\n  }\n\n  if (workerId == null) {\n    workerId = '#default';\n  }\n  var id = \"workerModule\" + (++_workerModuleId);\n  var name = options.name || id;\n  var registrationPromise = null;\n\n  dependencies = dependencies && dependencies.map(function (dep) {\n    // Wrap raw functions as worker modules with no dependencies\n    if (typeof dep === 'function' && !dep.workerModuleData) {\n      _allowInitAsString = true;\n      dep = defineWorkerModule({\n        workerId: workerId,\n        name: (\"<\" + name + \"> function dependency: \" + (dep.name)),\n        init: (\"function(){return (\\n\" + (stringifyFunction(dep)) + \"\\n)}\")\n      });\n      _allowInitAsString = false;\n    }\n    // Grab postable data for worker modules\n    if (dep && dep.workerModuleData) {\n      dep = dep.workerModuleData;\n    }\n    return dep\n  });\n\n  function moduleFunc() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    // Register this module if needed\n    if (!registrationPromise) {\n      registrationPromise = callWorker(workerId,'registerModule', moduleFunc.workerModuleData);\n      var unregister = function () {\n        registrationPromise = null;\n        registeredModules[workerId].delete(unregister);\n      }\n      ;(registeredModules[workerId] || (registeredModules[workerId] = new Set())).add(unregister);\n    }\n\n    // Invoke the module, returning a promise\n    return registrationPromise.then(function (ref) {\n      var isCallable = ref.isCallable;\n\n      if (isCallable) {\n        return callWorker(workerId,'callModule', {id: id, args: args})\n      } else {\n        throw new Error('Worker module function was called but `init` did not return a callable function')\n      }\n    })\n  }\n  moduleFunc.workerModuleData = {\n    isWorkerModule: true,\n    id: id,\n    name: name,\n    dependencies: dependencies,\n    init: stringifyFunction(init),\n    getTransferables: getTransferables && stringifyFunction(getTransferables)\n  };\n  return moduleFunc\n}\n\n/**\n * Terminate an active Worker by a workerId that was passed to defineWorkerModule.\n * This only terminates the Worker itself; the worker module will remain available\n * and if you call it again its Worker will be respawned.\n * @param {string} workerId\n */\nfunction terminateWorker(workerId) {\n  // Unregister all modules that were registered in that worker\n  if (registeredModules[workerId]) {\n    registeredModules[workerId].forEach(function (unregister) {\n      unregister();\n    });\n  }\n  // Terminate the Worker object\n  if (workers[workerId]) {\n    workers[workerId].terminate();\n    delete workers[workerId];\n  }\n}\n\n/**\n * Stringifies a function into a form that can be deserialized in the worker\n * @param fn\n */\nfunction stringifyFunction(fn) {\n  var str = fn.toString();\n  // If it was defined in object method/property format, it needs to be modified\n  if (!/^function/.test(str) && /^\\w+\\s*\\(/.test(str)) {\n    str = 'function ' + str;\n  }\n  return str\n}\n\n\nfunction getWorker(workerId) {\n  var worker = workers[workerId];\n  if (!worker) {\n    // Bootstrap the worker's content\n    var bootstrap = stringifyFunction(workerBootstrap);\n\n    // Create the worker from the bootstrap function content\n    worker = workers[workerId] = new Worker(\n      URL.createObjectURL(\n        new Blob(\n          [(\"/** Worker Module Bootstrap: \" + (workerId.replace(/\\*/g, '')) + \" **/\\n\\n;(\" + bootstrap + \")()\")],\n          {type: 'application/javascript'}\n        )\n      )\n    );\n\n    // Single handler for response messages from the worker\n    worker.onmessage = function (e) {\n      var response = e.data;\n      var msgId = response.messageId;\n      var callback = openRequests[msgId];\n      if (!callback) {\n        throw new Error('WorkerModule response with empty or unknown messageId')\n      }\n      delete openRequests[msgId];\n      callback(response);\n    };\n  }\n  return worker\n}\n\n// Issue a call to the worker with a callback to handle the response\nfunction callWorker(workerId, action, data) {\n  return new Promise(function (resolve, reject) {\n    var messageId = ++_messageId;\n    openRequests[messageId] = function (response) {\n      if (response.success) {\n        resolve(response.result);\n      } else {\n        reject(new Error((\"Error in worker \" + action + \" call: \" + (response.error))));\n      }\n    };\n    getWorker(workerId).postMessage({\n      messageId: messageId,\n      action: action,\n      data: data\n    });\n  })\n}\n\nexport { defineWorkerModule, stringifyFunction, terminateWorker };\n"],"names":["workerBootstrap","modules","registerModule","ref","callback","id","name","dependencies","init","getTransferables","dep","depResult","rehydrate","value","err","callModule","ref$1","args","result","handleResult","rej","tx","str","r","url","e","messageId","action","data","transferables","defineMainThreadModule","options","moduleFunc","len","initResult","initPromise","deps","supportsWorkers","supported","worker","_workerModuleId","_messageId","_allowInitAsString","workers","registeredModules","openRequests","defineWorkerModule","workerId","registrationPromise","stringifyFunction","callWorker","unregister","isCallable","terminateWorker","fn","getWorker","bootstrap","response","msgId","resolve","reject"],"mappings":"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","x_google_ignoreList":[0]}